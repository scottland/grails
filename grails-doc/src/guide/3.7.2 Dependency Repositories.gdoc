h4. Remote Repositories

Grails, when installed, does not use any remote public repositories. There is a default @grailsHome()@ repository that will locate the JAR files Grails needs from your Grails installation. If you want to take advantage of a public repository you need to specify as such inside the @repositories@ block:

{code}
repositories {
    mavenCentral()
}
{code}

In this case the default public Maven repository is specified. To use the SpringSource Enterprise Bundle Repository you can use the @ebr()@ method:

{code}
repositories {
    ebr()
}
{code}


You can also specify a specific Maven repository to use by URL:

{code}
repositories {
	mavenRepo "http://repository.codehaus.org"
}
{code}

h4. Local Resolvers

If you do not wish to use a public Maven repository you can specify a flat file repository:

{code}
repositories {
	flatDir name:'myRepo', dirs:'/path/to/repo'
}
{code}

h4. Custom Resolvers

If all else fails since Grails builds on Apache Ivy you can specify an Ivy resolver:

{code}
repositories {
	resolver new URLResolver(...)
}

{code}

h4. Authentication

If your repository requires some form of authentication you can specify as such using a @credentials@ block:

{code}
credentials {
	realm = ".."
	host = "localhost"
	username = "myuser"
	password = "mypass"
}
{code}

The above can also be placed in your @USER_HOME/.grails/settings.groovy@ file using the @grails.project.ivy.authentication@ setting:

{code}
grails.project.ivy.authentication = {
	credentials {
		realm = ".."
		host = "localhost"
		username = "myuser"
		password = "mypass"
	}	
}
{code}

